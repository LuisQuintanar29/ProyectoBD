sudo service postgresql start
sudo -i -u postgres psql

CREATE DATABASE papeleria;

\c papeleria

DROP TABLE IF EXISTS cliente CASCADE;
DROP TABLE IF EXISTS compañia CASCADE;
DROP TABLE IF EXISTS consumo CASCADE;
DROP TABLE IF EXISTS email CASCADE;
DROP TABLE IF EXISTS impresion CASCADE;
DROP TABLE IF EXISTS inventario CASCADE;
DROP TABLE IF EXISTS preciorecarga CASCADE;
DROP TABLE IF EXISTS producto CASCADE;
DROP TABLE IF EXISTS proveedor CASCADE;
DROP TABLE IF EXISTS recarga CASCADE;
DROP TABLE IF EXISTS tamañohoja CASCADE;
DROP TABLE IF EXISTS telefono CASCADE;
DROP TABLE IF EXISTS tipoimpresion CASCADE;
DROP TABLE IF EXISTS tipoproducto CASCADE;

CREATE TABLE cliente(
RFC varchar(13) NOT NULL,
NombreCliente varchar(70) NOT NULL ,
EstadoCliente varchar(70) NOT NULL,
ColoniaCliente varchar(70) NOT NULL,
CalleCliente varchar(70) NOT NULL,
CPCliente int NOT NULL,
NumeroCliente int NOT NULL,
CONSTRAINT cliente_PK PRIMARY KEY (RFC)
);

CREATE TABLE email(
Email varchar(50) NOT NULL,
RFC varchar(13) NOT NULL,
CONSTRAINT email_PK PRIMARY KEY (Email),
CONSTRAINT email_cliente_FK FOREIGN KEY (RFC) REFERENCES cliente(RFC) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE proveedor(
RazonSocial varchar(30) NOT NULL,
NombreProv varchar(70) NOT NULL,
EstadoProv varchar(70) NOT NULL,
ColoniaProv varchar(70) NOT NULL,
CalleProv varchar(70) NOT NULL,
CPProv int NOT NULL,
NumeroProv int NOT NULL,
CONSTRAINT proveedor_PK PRIMARY KEY (RazonSocial)
);

CREATE TABLE telefono(
Telefono int NOT NULL,
RazonSocial varchar(30) NOT NULL,
CONSTRAINT telefono_PK PRIMARY KEY (Telefono),
CONSTRAINT telefono_proveedor_FK FOREIGN KEY (RazonSocial) REFERENCES proveedor (RazonSocial) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE inventario(
CodigoBarras int NOT NULL,
PrecioCompra int NOT NULL,
FechaCompra date NOT NULL,
Stock int NOT NULL,
CONSTRAINT inventario_PK PRIMARY KEY (CodigoBarras)
);

CREATE TABLE tipoproducto(
IDTipoProd serial,
TipoProducto varchar(30) NOT NULL,
CONSTRAINT tipoproducto_PK PRIMARY KEY (IDTipoProd)
);

CREATE TABLE producto(
CodigoBarras int NOT NULL,
PrecioProd int NOT NULL,
Marca varchar(15) NOT NULL,
DescripcionProd varchar(30) NOT NULL,
IDTipoProd int NOT NULL,
CONSTRAINT producto_PK PRIMARY KEY (CodigoBarras),
CONSTRAINT productoCodBar_inventario_FK FOREIGN KEY (CodigoBarras) REFERENCES inventario (CodigoBarras) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT producto_tipoproducto_FK FOREIGN KEY (IDTipoProd) REFERENCES tipoproducto (IDTipoProd) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE tipoimpresion(
IDTipoImpresion serial,
TipoImpresion varchar(15) NOT NULL,
CONSTRAINT tipoimpresion_PK PRIMARY KEY (IDTipoImpresion)
);

CREATE TABLE tamañohoja(
IDTamaño serial,
TamañoHoja varchar(15) NOT NULL,
CONSTRAINT tamañohoja_PK PRIMARY KEY (IDTamaño)
);

CREATE TABLE impresion(
IDTamaño int NOT NULL,
IDTipoImpresion int NOT NULL,
PrecioServ int NOT NULL,
DescripcionServ varchar(30) NOT NULL,
CONSTRAINT impresion_PK PRIMARY KEY (IDTamaño,IDTipoImpresion),
CONSTRAINT impresion_tipoimpresion_FK FOREIGN KEY (IDTipoImpresion) REFERENCES tipoimpresion (IDTipoImpresion),
CONSTRAINT impresion_tamañohoja_FK FOREIGN KEY (IDTamaño) REFERENCES tamañohoja (IDTamaño) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE compañia(
IDCompañia serial,
Compañia varchar(30) NOT NULL,
CONSTRAINT compañia_PK PRIMARY KEY (IDCompañia)
);

CREATE TABLE preciorecarga(
IDRecarga serial,
PrecioRecarga int NOT NULL,
CONSTRAINT preciorecarga_PK PRIMARY KEY (IDRecarga)
);

CREATE TABLE recarga(
IDCompañia int NOT NULL,
IDRecarga int NOT NULL,
DescripcionServ varchar(30) NOT NULL,
CONSTRAINT recarga_PK PRIMARY KEY (IDCompañia,IDRecarga),
CONSTRAINT recarga_compañia_FK FOREIGN KEY (IDCompañia) REFERENCES compañia (IDCompañia) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT recarga_preciorecarga_FK FOREIGN KEY (IDRecarga) REFERENCES  preciorecarga (IDRecarga) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE consumo(
NoVenta int NOT NULL,
FechaVenta date NOT NULL,
CantidadArticulo int NOT NULL,
PrecioArticulo int NOT NULL,
Total int GENERATED ALWAYS AS (CantidadArticulo*PrecioArticulo) STORED
);

INSERT INTO tipoproducto (TipoProducto) VALUES ('Regalo');
INSERT INTO tipoproducto (TipoProducto) VALUES ('Articulo de papeleria');


INSERT INTO tipoimpresion (TipoImpresion) VALUES ('Blanco/Negro');
INSERT INTO tipoimpresion (TipoImpresion) VALUES ('Color');


INSERT INTO tamañohoja (TamañoHoja) VALUES ('A0');
INSERT INTO tamañohoja (TamañoHoja) VALUES ('A1');
INSERT INTO tamañohoja (TamañoHoja) VALUES ('A2');
INSERT INTO tamañohoja (TamañoHoja) VALUES ('A3');
INSERT INTO tamañohoja (TamañoHoja) VALUES ('A4');


INSERT INTO compañia (compañia) VALUES ('Movistar');
INSERT INTO compañia (compañia) VALUES ('Telcel');
INSERT INTO compañia (compañia) VALUES ('UNEFON');
INSERT INTO compañia (compañia) VALUES ('AT&T');


INSERT INTO preciorecarga (PrecioRecarga) VALUES (10);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (20);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (30);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (50);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (100);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (200);
INSERT INTO preciorecarga (PrecioRecarga) VALUES (500);


SELECT * FROM tipoproducto;
SELECT * FROM compañia;
SELECT * FROM preciorecarga;
SELECT * FROM tipoimpresion;
SELECT * FROM tamañohoja;
